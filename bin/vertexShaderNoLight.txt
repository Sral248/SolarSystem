#version 400 core

in vec3 position;
in vec2 texCords;
in vec3 normVecs;
uniform mat4 transMatrix;
uniform mat4 standartMatrix;
uniform mat4 viewMatrix;
uniform int dimension;
uniform vec3 lightPos;
out vec2 vTexCords;
out vec3 normVec;
out vec3 toLightVector;
out vec3 zBufferCords;
varying vec2 parsDim;

void main(void){
	vec4 worldPos = transMatrix*vec4(position,1.0);
	vec4 positionRelativeToCam = viewMatrix * worldPos;
	gl_Position =   standartMatrix * positionRelativeToCam;
	vTexCords = texCords;
	normVec = (transMatrix*vec4(normVecs,0)).xyz;
	toLightVector = lightPos - worldPos.xyz;
	parsDim = vec2(dimension,0);
}